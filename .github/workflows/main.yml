name: Build signed Artifacts

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build APKs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Create local.properties file
        run: |
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> local.properties
          echo "STORE_FILE=$GITHUB_WORKSPACE/keystore/release.keystore" >> local.properties
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> local.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> local.properties
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> local.properties

      - name: Create the keystore file from secret
        run: |
          mkdir -p keystore
          echo "${{ secrets.STORE_FILE }}" | base64 --decode > keystore/release.keystore

      - name: Create google-services.json
        run: |
          echo ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 --decode > $GITHUB_WORKSPACE/app/google-services.json

      - name: Build signed Release APK
        # Nutzt --parallel, um Aufgaben gleichzeitig auszuführen
        run: ./gradlew assembleRelease --stacktrace --parallel
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          KEYSTORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Build signed Release AAB
        # Nutzt --parallel, um Aufgaben gleichzeitig auszuführen
        run: ./gradlew bundleRelease --stacktrace --parallel
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          KEYSTORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload signed Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload signed Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: app/build/outputs/bundle/release/app-release.aab

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    # Fügt die Berechtigung zum Erstellen von Releases hinzu
    permissions:
      contents: write
    steps:
      - name: Download all workflow artifacts
        uses: actions/download-artifact@v5
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            release-apk/app-release.apk
            release-aab/app-release.aab

  upload-to-play-store:
    name: Upload to Google Play Store
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    # Auch hier Berechtigungen hinzufügen, falls es bei anderen Schritten Probleme gibt
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download all workflow artifacts
        # Dieser Schritt lädt alle Artefakte des Builds herunter
        uses: actions/download-artifact@v5

      - name: Get tag name and determine track
        id: get_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/v}
          TRACK="production"
          if [[ "$TAG_NAME" == *"-alpha" ]]; then
            TRACK="alpha"
          elif [[ "$TAG_NAME" == *"-beta" ]]; then
            TRACK="beta"
          elif [[ "$TAG_NAME" == *"-internal" ]]; then
            TRACK="internal"
          fi
          echo "track=$TRACK" >> $GITHUB_OUTPUT

      - name: Upload AAB to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.PLAY_STORE_API_KEY }}
          packageName: 'de.ljz.questify'
          # Aktualisierter Pfad, da der Download in ein Unterverzeichnis geht
          releaseFiles: 'release-aab/app-release.aab'
          track: ${{ steps.get_tag.outputs.track }}
          whatsNewDirectory: fastlane/metadata/android/
