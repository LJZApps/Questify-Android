name: Build Debug and Release APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build APKs
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2. Set up JDK 19 (matching your project configuration)
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '19'

      # 3. Cache Gradle dependencies to speed up builds
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Generate local.properties file with Sentry Auth Token
      - name: Create local.properties file
        run: |
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> local.properties

      # 5. Build the debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace

      # 6. Build the release APK
      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace

      # 7. Upload Debug APK to GitHub Actions artifacts
      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      # 8. Upload Release APK to GitHub Actions artifacts
      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk
